{"ast":null,"code":"const stateDefault = {\n  danhSachGheDangDat: [{\n    soGhe: \"A1\",\n    gia: 1000\n  }]\n};\n\nconst BaiTapDatVeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stateDefault;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"DAT_GHE\":\n      {\n        let danhSachGheDangDatUpdate = [...state.danhSachGheDangDatUpdate.danhSachGheDangDat];\n        let index = danhSachGheDangDatUpdate.findIndex(gheDangDat => gheDangDat.soGhe === action.ghe.soGhe);\n\n        if (index !== -1) {\n          danhSachGheDangDatUpdate.splice(index, 1);\n        }\n\n        state.danhSachGheDangDat = danhSachGheDangDatUpdate;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = BaiTapDatVeReducer;\nexport default BaiTapDatVeReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaiTapDatVeReducer\");","map":{"version":3,"sources":["/Users/admin/Cybersoft_Course/React-Demo/booking-cinema/src/redux/BaiTapDatVeReducer.js"],"names":["stateDefault","danhSachGheDangDat","soGhe","gia","BaiTapDatVeReducer","state","action","type","danhSachGheDangDatUpdate","index","findIndex","gheDangDat","ghe","splice"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,kBAAkB,EAAE,CAAC;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,GAAG,EAAE;AAApB,GAAD;AADD,CAArB;;AAIA,MAAMC,kBAAkB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AAAgB;AACd,YAAIC,wBAAwB,GAAG,CAC7B,GAAGH,KAAK,CAACG,wBAAN,CAA+BP,kBADL,CAA/B;AAGA,YAAIQ,KAAK,GAAGD,wBAAwB,CAACE,SAAzB,CACTC,UAAD,IAAgBA,UAAU,CAACT,KAAX,KAAqBI,MAAM,CAACM,GAAP,CAAWV,KADtC,CAAZ;;AAGA,YAAIO,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBD,UAAAA,wBAAwB,CAACK,MAAzB,CAAgCJ,KAAhC,EAAuC,CAAvC;AACD;;AACDJ,QAAAA,KAAK,CAACJ,kBAAN,GAA2BO,wBAA3B;AACD;;AACD;AACE,aAAO,EAAE,GAAGH;AAAL,OAAP;AAdJ;AAgBD,CAjBD;;KAAMD,kB;AAmBN,eAAeA,kBAAf","sourcesContent":["const stateDefault = {\n  danhSachGheDangDat: [{ soGhe: \"A1\", gia: 1000 }],\n};\n\nconst BaiTapDatVeReducer = (state = stateDefault, action) => {\n  switch (action.type) {\n    case \"DAT_GHE\": {\n      let danhSachGheDangDatUpdate = [\n        ...state.danhSachGheDangDatUpdate.danhSachGheDangDat,\n      ];\n      let index = danhSachGheDangDatUpdate.findIndex(\n        (gheDangDat) => gheDangDat.soGhe === action.ghe.soGhe\n      );\n      if (index !== -1) {\n        danhSachGheDangDatUpdate.splice(index, 1);\n      }\n      state.danhSachGheDangDat = danhSachGheDangDatUpdate;\n    }\n    default:\n      return { ...state };\n  }\n};\n\nexport default BaiTapDatVeReducer;\n"]},"metadata":{},"sourceType":"module"}