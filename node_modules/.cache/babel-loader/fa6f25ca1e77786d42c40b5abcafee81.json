{"ast":null,"code":"import { DAT_GHE, HUY_GHE } from \"../types/BaiTapDatVeType\";\nconst stateDefault = {// danhSachGheDangDat: [],\n};\n\nconst BaiTapDatVeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stateDefault;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DAT_GHE:\n      {\n        let danhSachGheDangDatUpdate = [...state.danhSachGheDangDat];\n        let index = danhSachGheDangDatUpdate.findIndex(gheDangDat => gheDangDat.soGhe === action.ghe.soGhe);\n\n        if (index !== -1) {\n          danhSachGheDangDatUpdate.splice(index, 1);\n        } else {\n          danhSachGheDangDatUpdate.push(action.ghe);\n        } // Update state render again\n\n\n        state.danhSachGheDangDat = danhSachGheDangDatUpdate;\n        return { ...state\n        };\n      }\n\n    case HUY_GHE:\n      {\n        let danhSachGheDangDatUpdate = [...state.danhSachGheDangDat];\n        let index = danhSachGheDangDatUpdate.findIndex(gheDangDat => gheDangDat.soGhe === action.ghe.soGhe);\n\n        if (index !== -1) {\n          danhSachGheDangDatUpdate.splice(index, 1);\n        } else {\n          danhSachGheDangDatUpdate.push(action.ghe);\n        } // Update state render again\n\n\n        state.danhSachGheDangDat = danhSachGheDangDatUpdate;\n        return { ...state\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = BaiTapDatVeReducer;\nexport default BaiTapDatVeReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaiTapDatVeReducer\");","map":{"version":3,"sources":["/Users/admin/Cybersoft_Course/React-Demo/booking-cinema/src/redux/reducers/BaiTapDatVeReducer.js"],"names":["DAT_GHE","HUY_GHE","stateDefault","BaiTapDatVeReducer","state","action","type","danhSachGheDangDatUpdate","danhSachGheDangDat","index","findIndex","gheDangDat","soGhe","ghe","splice","push"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,0BAAjC;AAEA,MAAMC,YAAY,GAAG,CACnB;AADmB,CAArB;;AAIA,MAAMC,kBAAkB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,OAAL;AAAc;AACZ,YAAIO,wBAAwB,GAAG,CAAC,GAAGH,KAAK,CAACI,kBAAV,CAA/B;AACA,YAAIC,KAAK,GAAGF,wBAAwB,CAACG,SAAzB,CACTC,UAAD,IAAgBA,UAAU,CAACC,KAAX,KAAqBP,MAAM,CAACQ,GAAP,CAAWD,KADtC,CAAZ;;AAGA,YAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBF,UAAAA,wBAAwB,CAACO,MAAzB,CAAgCL,KAAhC,EAAuC,CAAvC;AACD,SAFD,MAEO;AACLF,UAAAA,wBAAwB,CAACQ,IAAzB,CAA8BV,MAAM,CAACQ,GAArC;AACD,SATW,CAUZ;;;AACAT,QAAAA,KAAK,CAACI,kBAAN,GAA2BD,wBAA3B;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AACD,SAAKH,OAAL;AAAc;AACZ,YAAIM,wBAAwB,GAAG,CAAC,GAAGH,KAAK,CAACI,kBAAV,CAA/B;AACA,YAAIC,KAAK,GAAGF,wBAAwB,CAACG,SAAzB,CACTC,UAAD,IAAgBA,UAAU,CAACC,KAAX,KAAqBP,MAAM,CAACQ,GAAP,CAAWD,KADtC,CAAZ;;AAGA,YAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBF,UAAAA,wBAAwB,CAACO,MAAzB,CAAgCL,KAAhC,EAAuC,CAAvC;AACD,SAFD,MAEO;AACLF,UAAAA,wBAAwB,CAACQ,IAAzB,CAA8BV,MAAM,CAACQ,GAArC;AACD,SATW,CAUZ;;;AACAT,QAAAA,KAAK,CAACI,kBAAN,GAA2BD,wBAA3B;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AAED;AACE,aAAO,EAAE,GAAGA;AAAL,OAAP;AA/BJ;AAiCD,CAlCD;;KAAMD,kB;AAoCN,eAAeA,kBAAf","sourcesContent":["import { DAT_GHE, HUY_GHE } from \"../types/BaiTapDatVeType\";\n\nconst stateDefault = {\n  // danhSachGheDangDat: [],\n};\n\nconst BaiTapDatVeReducer = (state = stateDefault, action) => {\n  switch (action.type) {\n    case DAT_GHE: {\n      let danhSachGheDangDatUpdate = [...state.danhSachGheDangDat];\n      let index = danhSachGheDangDatUpdate.findIndex(\n        (gheDangDat) => gheDangDat.soGhe === action.ghe.soGhe\n      );\n      if (index !== -1) {\n        danhSachGheDangDatUpdate.splice(index, 1);\n      } else {\n        danhSachGheDangDatUpdate.push(action.ghe);\n      }\n      // Update state render again\n      state.danhSachGheDangDat = danhSachGheDangDatUpdate;\n      return { ...state };\n    }\n    case HUY_GHE: {\n      let danhSachGheDangDatUpdate = [...state.danhSachGheDangDat];\n      let index = danhSachGheDangDatUpdate.findIndex(\n        (gheDangDat) => gheDangDat.soGhe === action.ghe.soGhe\n      );\n      if (index !== -1) {\n        danhSachGheDangDatUpdate.splice(index, 1);\n      } else {\n        danhSachGheDangDatUpdate.push(action.ghe);\n      }\n      // Update state render again\n      state.danhSachGheDangDat = danhSachGheDangDatUpdate;\n      return { ...state };\n    }\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default BaiTapDatVeReducer;\n"]},"metadata":{},"sourceType":"module"}